package api

const swaggerJSON = `{ "schemes": [ "http" ], "swagger": "2.0", "info": { "description": "Thrap is toolchain to manage software development lifecycle.", "title": "thrap API", "version": "v.0.1.0" }, "basePath": "/v1", "paths": { "/project/{project}": { "get": { "description": "Returns information about the project", "tags": [ "Project" ], "summary": "Get project", "parameters": [ { "type": "string", "description": "project id", "name": "project", "in": "path", "required": true } ], "responses": { "200": { "description": "OK", "schema": { "$ref": "#/definitions/Project" } }, "404": { "description": "Project not found" } } }, "put": { "description": "Updates an existing project's properties", "tags": [ "Project" ], "summary": "Update project", "parameters": [ { "type": "string", "description": "project id", "name": "project", "in": "path", "required": true }, { "type": "object", "description": "project data", "name": "project", "in": "body", "schema": { "$ref": "#/definitions/Project" } }, { "name": "Thrap-Profile", "in": "header", "required": true, "schema": { "type": "string" } }, { "name": "X-Vault-Token", "in": "header", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "200": { "description": "Updated", "schema": { "$ref": "#/definitions/Project" } }, "404": { "description": "Project not found" } } }, "post": { "description": "Creates a new project", "tags": [ "Project" ], "summary": "Create project", "parameters": [ { "type": "string", "description": "project id", "name": "project", "in": "path", "required": true }, { "type": "object", "description": "project data", "name": "project", "in": "body", "schema": { "$ref": "#/definitions/Project" } }, { "name": "Thrap-Profile", "in": "header", "required": true, "schema": { "type": "string" } }, { "name": "X-Vault-Token", "in": "header", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "200": { "description": "Created", "schema": { "$ref": "#/definitions/Project" } } } } }, "/project/{project}/deployment/spec": { "get": { "description": "Returns the registered deployment specification", "tags": [ "Deployment" ], "summary": "Get spec", "responses": { "200": { "description": "OK" }, "404": { "description": "Specification not found" } } }, "post": { "description": "Creates or updates a deployment specification for a project", "tags": [ "Deployment" ], "summary": "Create/Update spec", "parameters": [ { "type": "string", "description": "project id", "name": "project", "in": "path", "required": true }, { "name": "Thrap-Profile", "in": "header", "required": true, "schema": { "type": "string" } }, { "name": "X-Vault-Token", "in": "header", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "200": { "description": "OK" }, "400": { "description": "Bad Request" } } } }, "/project/{project}/deployment/{environment}/{instance}": { "get": { "description": "Gets deployment instance details for a project in an environment", "tags": [ "Deployment" ], "summary": "Get deployment", "parameters": [ { "type": "string", "description": "project id", "name": "project", "in": "path", "required": true }, { "type": "string", "description": "environment id", "name": "environment", "in": "path", "required": true }, { "type": "string", "description": "instance id", "name": "instance", "in": "path", "required": true } ], "responses": { "200": { "description": "OK", "schema": { "$ref": "#/definitions/Deployment" } } } }, "put": { "description": "Deploys an existing deployment bundle", "tags": [ "Deployment" ], "summary": "Deploy", "parameters": [ { "type": "string", "description": "project id", "name": "project", "in": "path", "required": true }, { "type": "string", "description": "environment id", "name": "environment", "in": "path", "required": true }, { "type": "string", "description": "instance id", "name": "instance", "in": "path", "required": true }, { "name": "Thrap-Profile", "in": "header", "required": true, "schema": { "type": "string" } }, { "name": "X-Vault-Token", "in": "header", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "200": { "description": "OK", "schema": { "$ref": "#/definitions/Deployment" } } } }, "post": { "description": "Creates a new deployment instanace for a project in an environment", "tags": [ "Deployment" ], "summary": "Create deployment", "parameters": [ { "type": "string", "description": "project id", "name": "project", "in": "path", "required": true }, { "type": "string", "description": "environment id", "name": "environment", "in": "path", "required": true }, { "type": "string", "description": "instance id", "name": "instance", "in": "path", "required": true }, { "name": "Thrap-Profile", "in": "header", "required": true, "schema": { "type": "string" } }, { "name": "X-Vault-Token", "in": "header", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "200": { "description": "OK", "schema": { "$ref": "#/definitions/Deployment" } } } } }, "/project/{project}/deployments": { "get": { "description": "Returns a list of all known deployments for a project", "tags": [ "Deployment" ], "summary": "List deployments", "responses": { "200": { "description": "OK" } } } }, "/projects": { "get": { "description": "Returns a list of all registered projects", "tags": [ "Project" ], "summary": "List projects", "responses": { "200": { "description": "OK" } } } } }, "definitions": { "Deployment": { "type": "object", "properties": { "Name": { "type": "string" }, "Version": { "type": "integer" } } }, "Project": { "type": "object", "properties": { "Description": { "type": "string" }, "Developers": { "type": "array" }, "Maintianer": { "type": "string" }, "Name": { "type": "string" }, "Owner": { "type": "string" }, "Source": { "type": "string" } } } }, "tags": [ { "description": "Project level operations", "name": "Project" }, { "description": "Deployment level operations", "name": "Deployment" } ] }`
